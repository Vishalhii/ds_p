import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Load dataset & preprocess
data = pd.read_csv('Iris.csv')
x, y = data.iloc[:, 1:5].values, LabelEncoder().fit_transform(data['Species'])
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)

# Train & Predict
model = DecisionTreeClassifier(criterion='entropy', random_state=0).fit(x_train, y_train)
y_pred = model.predict(x_test)

# Print accuracy & report
print(f"\nAccuracy: {accuracy_score(y_test, y_pred) * 100:.2f}%\n")
print(classification_report(y_test, y_pred))

# Plot confusion matrix
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, cmap='Blues', fmt='d')
plt.title("Confusion Matrix")
plt.show()

# Plot decision tree
plot_tree(model, feature_names=data.columns[1:5], class_names=data['Species'].unique(), filled=True)
plt.show()
